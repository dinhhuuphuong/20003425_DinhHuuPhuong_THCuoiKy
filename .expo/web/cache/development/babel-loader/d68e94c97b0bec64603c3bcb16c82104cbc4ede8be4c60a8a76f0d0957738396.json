{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"label\", \"value\", \"onChange\", \"style\", \"locale\", \"validRange\", \"inputMode\", \"withDateFormatInLabel\", \"hasError\", \"hideValidationErrors\", \"onValidationError\", \"modal\", \"inputButton\", \"saveLabel\", \"saveLabelDisabled\", \"uppercase\", \"startYear\", \"endYear\", \"onChangeText\", \"inputEnabled\", \"disableStatusBarPadding\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport TextInputWithMask from '../TextInputMask';\nimport { HelperText, useTheme } from 'react-native-paper';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useDateInput from './inputUtils';\nfunction DatePickerInputWithoutModal(_ref, ref) {\n  let {\n      label,\n      value,\n      onChange,\n      style,\n      locale,\n      validRange,\n      inputMode,\n      withDateFormatInLabel = true,\n      hasError,\n      hideValidationErrors,\n      onValidationError,\n      modal,\n      inputButton,\n      saveLabel,\n      saveLabelDisabled,\n      uppercase,\n      startYear,\n      endYear,\n      onChangeText,\n      inputEnabled,\n      disableStatusBarPadding\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const theme = useTheme();\n  const {\n    formattedValue,\n    inputFormat,\n    onChangeText: onDateInputChangeText,\n    error\n  } = useDateInput({\n    locale,\n    value,\n    validRange,\n    inputMode,\n    onChange,\n    onValidationError\n  });\n  let disabled;\n  if (inputEnabled !== undefined) {\n    disabled = !inputEnabled;\n  }\n  if (rest.disabled) {\n    disabled = rest.disabled;\n  }\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.root\n  }, React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(TextInputWithMask, _extends({}, rest, {\n    ref: ref,\n    label: getLabel({\n      label: label,\n      inputFormat,\n      withDateFormatInLabel\n    }),\n    value: formattedValue,\n    keyboardType: rest.keyboardType ?? 'number-pad',\n    mask: inputFormat,\n    disabled: disabled,\n    onChangeText: onDateInputChangeText,\n    onChange: e => onChangeText && onChangeText(e.nativeEvent.text),\n    keyboardAppearance: rest.keyboardAppearance ?? (theme.dark ? 'dark' : 'default'),\n    error: !!error && !hideValidationErrors || !!hasError,\n    style: [styles.input, style],\n    inputButton: inputButton\n  }))), error && !hideValidationErrors ? React.createElement(HelperText, {\n    type: \"error\",\n    visible: !!error\n  }, error) : null), modal === null || modal === void 0 ? void 0 : modal({\n    value,\n    locale,\n    inputMode,\n    validRange,\n    saveLabel,\n    saveLabelDisabled,\n    uppercase,\n    startYear,\n    endYear,\n    inputEnabled,\n    disableStatusBarPadding\n  }));\n}\nfunction getLabel(_ref2) {\n  let {\n    withDateFormatInLabel,\n    inputFormat,\n    label\n  } = _ref2;\n  if (withDateFormatInLabel) {\n    return label ? `${label} (${inputFormat})` : inputFormat;\n  }\n  return label || '';\n}\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    width: '100%'\n  },\n  inputContainer: {\n    flexGrow: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%'\n  },\n  input: {\n    flexGrow: 1,\n    width: '100%'\n  }\n});\nexport default React.forwardRef(DatePickerInputWithoutModal);","map":{"version":3,"names":["React","TextInputWithMask","HelperText","useTheme","View","StyleSheet","useDateInput","DatePickerInputWithoutModal","_ref","ref","label","value","onChange","style","locale","validRange","inputMode","withDateFormatInLabel","hasError","hideValidationErrors","onValidationError","modal","inputButton","saveLabel","saveLabelDisabled","uppercase","startYear","endYear","onChangeText","inputEnabled","disableStatusBarPadding","rest","_objectWithoutPropertiesLoose","_excluded","theme","formattedValue","inputFormat","onDateInputChangeText","error","disabled","undefined","createElement","Fragment","styles","root","inputContainer","_extends","getLabel","keyboardType","mask","e","nativeEvent","text","keyboardAppearance","dark","input","type","visible","_ref2","create","flex","flexGrow","justifyContent","alignItems","width","flexDirection","forwardRef"],"sources":["C:\\Users\\LAPTOP HUU PHUONG\\Desktop\\THcuoiky_react\\THcuoiky\\BaiTapReactNativeTuan7Bai1-master\\node_modules\\react-native-paper-dates\\src\\Date\\DatePickerInputWithoutModal.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport TextInputWithMask from '../TextInputMask'\nimport { HelperText, useTheme } from 'react-native-paper'\nimport { View, StyleSheet } from 'react-native'\nimport useDateInput from './inputUtils'\nimport type { DatePickerInputProps } from './DatePickerInput.shared'\n\nfunction DatePickerInputWithoutModal(\n  {\n    label,\n    value,\n    onChange,\n    style,\n    locale,\n    validRange,\n    inputMode,\n    withDateFormatInLabel = true,\n    hasError,\n    hideValidationErrors,\n    onValidationError,\n    modal,\n    inputButton,\n    saveLabel,\n    saveLabelDisabled,\n    uppercase,\n    startYear,\n    endYear,\n    onChangeText,\n    inputEnabled,\n    disableStatusBarPadding,\n    ...rest\n  }: DatePickerInputProps & {\n    modal?: (params: {\n      value: DatePickerInputProps['value']\n      locale: DatePickerInputProps['locale']\n      inputMode: DatePickerInputProps['inputMode']\n      validRange: DatePickerInputProps['validRange']\n      saveLabel: DatePickerInputProps['saveLabel']\n      saveLabelDisabled: DatePickerInputProps['saveLabelDisabled']\n      uppercase: DatePickerInputProps['uppercase']\n      startYear: DatePickerInputProps['startYear']\n      endYear: DatePickerInputProps['endYear']\n      inputEnabled: DatePickerInputProps['inputEnabled']\n      disableStatusBarPadding: DatePickerInputProps['disableStatusBarPadding']\n    }) => any\n    inputButton?: React.ReactNode\n  },\n  ref: any\n) {\n  const theme = useTheme()\n  const {\n    formattedValue,\n    inputFormat,\n    onChangeText: onDateInputChangeText,\n    error,\n  } = useDateInput({\n    locale,\n    value,\n    validRange,\n    inputMode,\n    onChange,\n    onValidationError,\n  })\n\n  let disabled\n\n  if (inputEnabled !== undefined) {\n    disabled = !inputEnabled\n  }\n\n  if (rest.disabled) {\n    disabled = rest.disabled\n  }\n\n  return (\n    <>\n      <View style={styles.root}>\n        <View style={styles.inputContainer}>\n          <TextInputWithMask\n            {...rest}\n            ref={ref}\n            label={getLabel({\n              // TODO: support label components?\n              label: label as any,\n              inputFormat,\n              withDateFormatInLabel,\n            })}\n            value={formattedValue}\n            keyboardType={rest.keyboardType ?? 'number-pad'}\n            mask={inputFormat}\n            disabled={disabled}\n            onChangeText={onDateInputChangeText}\n            onChange={(e) => onChangeText && onChangeText(e.nativeEvent.text)}\n            keyboardAppearance={\n              rest.keyboardAppearance ?? (theme.dark ? 'dark' : 'default')\n            }\n            error={(!!error && !hideValidationErrors) || !!hasError}\n            style={[styles.input, style]}\n            inputButton={inputButton}\n          />\n        </View>\n        {error && !hideValidationErrors ? (\n          <HelperText type=\"error\" visible={!!error}>\n            {error}\n          </HelperText>\n        ) : null}\n      </View>\n      {modal?.({\n        value,\n        locale,\n        inputMode,\n        validRange,\n        saveLabel,\n        saveLabelDisabled,\n        uppercase,\n        startYear,\n        endYear,\n        inputEnabled,\n        disableStatusBarPadding,\n      })}\n    </>\n  )\n}\n\nfunction getLabel({\n  withDateFormatInLabel,\n  inputFormat,\n  label,\n}: {\n  withDateFormatInLabel: boolean\n  inputFormat: string\n  label: string | undefined\n}) {\n  if (withDateFormatInLabel) {\n    return label ? `${label} (${inputFormat})` : inputFormat\n  }\n  return label || ''\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    flexGrow: 1,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n    width: '100%',\n  },\n  inputContainer: {\n    flexGrow: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    width: '100%',\n  },\n  input: {\n    flexGrow: 1,\n    width: '100%',\n  },\n})\nexport default React.forwardRef(DatePickerInputWithoutModal)\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}