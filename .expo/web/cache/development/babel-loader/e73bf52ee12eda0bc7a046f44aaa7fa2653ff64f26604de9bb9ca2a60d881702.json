{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"value\", \"clockType\", \"pressed\", \"onPress\", \"onChanged\", \"inputType\", \"inputFontSize\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useTheme, TouchableRipple } from 'react-native-paper';\nimport Color from 'color';\nimport { inputTypes, useInputColors } from './timeUtils';\nfunction TimeInput(_ref, ref) {\n  let {\n      value,\n      clockType,\n      pressed,\n      onPress,\n      onChanged,\n      inputType,\n      inputFontSize = 57\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [controlledValue, setControlledValue] = React.useState(`${value}`);\n  const onInnerChange = text => {\n    setControlledValue(text);\n    if (text !== '' && text !== '0') {\n      onChanged(Number(text));\n    }\n  };\n  React.useEffect(() => {\n    setControlledValue(`${value}`);\n  }, [value]);\n  const theme = useTheme();\n  const [inputFocused, setInputFocused] = React.useState(false);\n  const highlighted = inputType === inputTypes.picker ? pressed : inputFocused;\n  const {\n    color,\n    backgroundColor\n  } = useInputColors(highlighted);\n  let formattedValue = controlledValue;\n  if (!inputFocused) {\n    formattedValue = controlledValue.length === 1 ? `0${controlledValue}` : `${controlledValue}`;\n  }\n  return React.createElement(View, {\n    style: styles.root\n  }, React.createElement(TextInput, _extends({\n    ref: ref,\n    style: [styles.input, {\n      color,\n      fontSize: inputFontSize,\n      backgroundColor,\n      borderRadius: theme.roundness * 2,\n      borderColor: theme.isV3 && highlighted ? theme.colors.onPrimaryContainer : undefined,\n      borderWidth: theme.isV3 && highlighted ? 2 : 0,\n      height: inputType === inputTypes.keyboard ? 72 : 80\n    }],\n    maxFontSizeMultiplier: 1.5,\n    value: formattedValue,\n    maxLength: 2,\n    onFocus: () => setInputFocused(true),\n    onBlur: () => setInputFocused(false),\n    keyboardAppearance: theme.dark ? 'dark' : 'default',\n    keyboardType: \"number-pad\",\n    onChangeText: onInnerChange\n  }, rest)), onPress && inputType === inputTypes.picker ? React.createElement(TouchableRipple, {\n    style: [StyleSheet.absoluteFill, styles.buttonOverlay, {\n      borderRadius: theme.roundness\n    }],\n    rippleColor: Platform.OS !== 'ios' ? Color(theme.colors.onSurface).fade(0.7).hex() : undefined,\n    onPress: () => onPress(clockType),\n    borderless: true\n  }, React.createElement(View, null)) : null);\n}\nconst styles = StyleSheet.create({\n  root: {\n    position: 'relative',\n    height: 80,\n    width: 96\n  },\n  input: {\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    width: 96\n  },\n  buttonOverlay: {\n    overflow: 'hidden'\n  }\n});\nexport default React.forwardRef(TimeInput);","map":{"version":3,"names":["React","View","TextInput","StyleSheet","Platform","useTheme","TouchableRipple","Color","inputTypes","useInputColors","TimeInput","_ref","ref","value","clockType","pressed","onPress","onChanged","inputType","inputFontSize","rest","_objectWithoutPropertiesLoose","_excluded","controlledValue","setControlledValue","useState","onInnerChange","text","Number","useEffect","theme","inputFocused","setInputFocused","highlighted","picker","color","backgroundColor","formattedValue","length","createElement","style","styles","root","_extends","input","fontSize","borderRadius","roundness","borderColor","isV3","colors","onPrimaryContainer","undefined","borderWidth","height","keyboard","maxFontSizeMultiplier","maxLength","onFocus","onBlur","keyboardAppearance","dark","keyboardType","onChangeText","absoluteFill","buttonOverlay","rippleColor","OS","onSurface","fade","hex","borderless","create","position","width","textAlign","textAlignVertical","overflow","forwardRef"],"sources":["C:\\Users\\LAPTOP HUU PHUONG\\Desktop\\THcuoiky_react\\THcuoiky\\BaiTapReactNativeTuan7Bai1-master\\node_modules\\react-native-paper-dates\\src\\Time\\TimeInput.tsx"],"sourcesContent":["import * as React from 'react'\nimport {\n  View,\n  TextInput,\n  TextInputProps,\n  StyleSheet,\n  Platform,\n} from 'react-native'\nimport { useTheme, TouchableRipple } from 'react-native-paper'\n\nimport Color from 'color'\nimport {\n  inputTypes,\n  PossibleClockTypes,\n  PossibleInputTypes,\n  useInputColors,\n} from './timeUtils'\n\ninterface TimeInputProps\n  extends Omit<Omit<TextInputProps, 'value'>, 'onFocus'> {\n  value: number\n  clockType: PossibleClockTypes\n  onPress?: (type: PossibleClockTypes) => any\n  pressed: boolean\n  onChanged: (n: number) => any\n  inputType: PossibleInputTypes\n  inputFontSize?: number\n}\n\nfunction TimeInput(\n  {\n    value,\n    clockType,\n    pressed,\n    onPress,\n    onChanged,\n    inputType,\n    inputFontSize = 57,\n    ...rest\n  }: TimeInputProps,\n  ref: any\n) {\n  const [controlledValue, setControlledValue] = React.useState<string>(\n    `${value}`\n  )\n\n  const onInnerChange = (text: string) => {\n    setControlledValue(text)\n    if (text !== '' && text !== '0') {\n      onChanged(Number(text))\n    }\n  }\n\n  React.useEffect(() => {\n    setControlledValue(`${value}`)\n  }, [value])\n\n  const theme = useTheme()\n  const [inputFocused, setInputFocused] = React.useState<boolean>(false)\n\n  const highlighted = inputType === inputTypes.picker ? pressed : inputFocused\n\n  const { color, backgroundColor } = useInputColors(highlighted)\n\n  let formattedValue = controlledValue\n  if (!inputFocused) {\n    formattedValue =\n      controlledValue.length === 1\n        ? `0${controlledValue}`\n        : `${controlledValue}`\n  }\n\n  return (\n    <View style={styles.root}>\n      <TextInput\n        ref={ref}\n        style={[\n          styles.input,\n          // eslint-disable-next-line react-native/no-inline-styles\n          {\n            color,\n            fontSize: inputFontSize,\n            backgroundColor,\n            borderRadius: theme.roundness * 2,\n            borderColor:\n              theme.isV3 && highlighted\n                ? theme.colors.onPrimaryContainer\n                : undefined,\n            borderWidth: theme.isV3 && highlighted ? 2 : 0,\n            height: inputType === inputTypes.keyboard ? 72 : 80,\n          },\n        ]}\n        maxFontSizeMultiplier={1.5}\n        value={formattedValue}\n        maxLength={2}\n        onFocus={() => setInputFocused(true)}\n        onBlur={() => setInputFocused(false)}\n        keyboardAppearance={theme.dark ? 'dark' : 'default'}\n        keyboardType=\"number-pad\"\n        onChangeText={onInnerChange}\n        {...rest}\n      />\n      {onPress && inputType === inputTypes.picker ? (\n        <TouchableRipple\n          style={[\n            StyleSheet.absoluteFill,\n            styles.buttonOverlay,\n            {\n              borderRadius: theme.roundness,\n            },\n          ]}\n          rippleColor={\n            Platform.OS !== 'ios'\n              ? Color(theme.colors.onSurface).fade(0.7).hex()\n              : undefined\n          }\n          onPress={() => onPress(clockType)}\n          borderless={true}\n        >\n          <View />\n        </TouchableRipple>\n      ) : null}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: { position: 'relative', height: 80, width: 96 },\n  input: {\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    width: 96,\n  },\n  buttonOverlay: { overflow: 'hidden' },\n})\n\nexport default React.forwardRef(TimeInput)\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}