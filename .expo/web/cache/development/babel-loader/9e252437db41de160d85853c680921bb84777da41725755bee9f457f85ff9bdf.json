{"ast":null,"code":"import * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Text, TouchableRipple, useTheme } from 'react-native-paper';\nimport { range } from '../utils';\nconst ITEM_HEIGHT = 62;\nexport default function YearPicker(_ref) {\n  let {\n    selectedYear,\n    selectingYear,\n    onPressYear,\n    startYear,\n    endYear\n  } = _ref;\n  const theme = useTheme();\n  const flatList = React.useRef(null);\n  const years = range(isNaN(startYear) ? 1800 : startYear, isNaN(endYear) ? 2200 : endYear);\n  React.useEffect(() => {\n    if (flatList.current && selectedYear) {\n      const indexToGo = selectedYear - startYear;\n      flatList.current.scrollToOffset({\n        offset: indexToGo / 3 * ITEM_HEIGHT - ITEM_HEIGHT,\n        animated: false\n      });\n    }\n  }, [flatList, selectedYear, startYear]);\n  return React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.root, {\n      backgroundColor: theme.colors.surface\n    }, selectingYear ? styles.opacity1 : styles.opacity0],\n    pointerEvents: selectingYear ? 'auto' : 'none'\n  }, React.createElement(FlatList, {\n    ref: flatList,\n    style: styles.list,\n    data: years,\n    renderScrollComponent: sProps => {\n      return React.createElement(ScrollView, sProps);\n    },\n    renderItem: _ref2 => {\n      let {\n        item\n      } = _ref2;\n      return React.createElement(Year, {\n        year: item,\n        selected: selectedYear === item,\n        onPressYear: onPressYear\n      });\n    },\n    keyExtractor: item => `${item}`,\n    numColumns: 3\n  }));\n}\nfunction YearPure(_ref3) {\n  let {\n    year,\n    selected,\n    onPressYear\n  } = _ref3;\n  const theme = useTheme();\n  let textFont = theme !== null && theme !== void 0 && theme.isV3 ? theme.fonts.bodyLarge : theme.fonts.medium;\n  return React.createElement(View, {\n    style: styles.year\n  }, React.createElement(TouchableRipple, {\n    onPress: () => onPressYear(year),\n    accessibilityRole: \"button\",\n    accessibilityLabel: String(year),\n    style: styles.yearButton\n  }, React.createElement(View, {\n    style: [styles.yearInner, selected ? {\n      backgroundColor: theme.colors.primary\n    } : null]\n  }, React.createElement(Text, {\n    maxFontSizeMultiplier: 1.5,\n    style: [styles.yearLabel, selected ? {\n      color: theme.isV3 ? theme.colors.onPrimary : '#fff'\n    } : {\n      color: theme.isV3 ? theme.colors.onSurfaceVariant : theme.colors.onSurface\n    }, Object.assign({}, textFont)],\n    selectable: false\n  }, year))));\n}\nconst Year = React.memo(YearPure);\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    top: 56,\n    zIndex: 100\n  },\n  list: {\n    flex: 1\n  },\n  year: {\n    flex: 1,\n    marginLeft: 16,\n    marginRight: 16,\n    height: ITEM_HEIGHT,\n    justifyContent: 'center'\n  },\n  yearButton: {\n    borderRadius: 46 / 2,\n    overflow: 'hidden'\n  },\n  yearInner: {\n    borderRadius: 46 / 2,\n    height: 46,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  yearLabel: {\n    fontSize: 16\n  },\n  opacity0: {\n    opacity: 0\n  },\n  opacity1: {\n    opacity: 1\n  }\n});","map":{"version":3,"names":["React","FlatList","StyleSheet","View","ScrollView","Text","TouchableRipple","useTheme","range","ITEM_HEIGHT","YearPicker","_ref","selectedYear","selectingYear","onPressYear","startYear","endYear","theme","flatList","useRef","years","isNaN","useEffect","current","indexToGo","scrollToOffset","offset","animated","createElement","style","absoluteFill","styles","root","backgroundColor","colors","surface","opacity1","opacity0","pointerEvents","ref","list","data","renderScrollComponent","sProps","renderItem","_ref2","item","Year","year","selected","keyExtractor","numColumns","YearPure","_ref3","textFont","isV3","fonts","bodyLarge","medium","onPress","accessibilityRole","accessibilityLabel","String","yearButton","yearInner","primary","maxFontSizeMultiplier","yearLabel","color","onPrimary","onSurfaceVariant","onSurface","Object","assign","selectable","memo","create","flex","top","zIndex","marginLeft","marginRight","height","justifyContent","borderRadius","overflow","alignItems","fontSize","opacity"],"sources":["C:\\Users\\LAPTOP HUU PHUONG\\Desktop\\THcuoiky_react\\THcuoiky\\BaiTapReactNativeTuan7Bai1-master\\node_modules\\react-native-paper-dates\\src\\Date\\YearPicker.tsx"],"sourcesContent":["import * as React from 'react'\nimport { FlatList, StyleSheet, View, ScrollView } from 'react-native'\nimport { MD2Theme, Text, TouchableRipple, useTheme } from 'react-native-paper'\nimport { range } from '../utils'\n\nconst ITEM_HEIGHT = 62\n\nexport default function YearPicker({\n  selectedYear,\n  selectingYear,\n  onPressYear,\n  startYear,\n  endYear,\n}: {\n  selectedYear: number | undefined\n  selectingYear: boolean\n  onPressYear: (year: number) => any\n  startYear: number\n  endYear: number\n}) {\n  const theme = useTheme()\n  const flatList = React.useRef<FlatList<number> | null>(null)\n  const years = range(\n    isNaN(startYear) ? 1800 : startYear,\n    isNaN(endYear) ? 2200 : endYear\n  )\n\n  // scroll to selected year\n  React.useEffect(() => {\n    if (flatList.current && selectedYear) {\n      const indexToGo = selectedYear - startYear\n      flatList.current.scrollToOffset({\n        offset: (indexToGo / 3) * ITEM_HEIGHT - ITEM_HEIGHT,\n        animated: false,\n      })\n    }\n  }, [flatList, selectedYear, startYear])\n\n  return (\n    <View\n      style={[\n        StyleSheet.absoluteFill,\n        styles.root,\n        { backgroundColor: theme.colors.surface },\n        selectingYear ? styles.opacity1 : styles.opacity0,\n      ]}\n      pointerEvents={selectingYear ? 'auto' : 'none'}\n    >\n      <FlatList<number>\n        ref={flatList}\n        style={styles.list}\n        data={years}\n        renderScrollComponent={(sProps) => {\n          return <ScrollView {...sProps} />\n        }}\n        renderItem={({ item }) => (\n          <Year\n            year={item}\n            selected={selectedYear === item}\n            onPressYear={onPressYear}\n          />\n        )}\n        keyExtractor={(item) => `${item}`}\n        numColumns={3}\n      />\n    </View>\n  )\n}\n\nfunction YearPure({\n  year,\n  selected,\n  onPressYear,\n}: {\n  year: number\n  selected: boolean\n  onPressYear: (newYear: number) => any\n}) {\n  const theme = useTheme()\n\n  let textFont = theme?.isV3\n    ? theme.fonts.bodyLarge\n    : (theme as any as MD2Theme).fonts.medium\n\n  return (\n    <View style={styles.year}>\n      <TouchableRipple\n        onPress={() => onPressYear(year)}\n        accessibilityRole=\"button\"\n        accessibilityLabel={String(year)}\n        style={styles.yearButton}\n      >\n        <View\n          style={[\n            styles.yearInner,\n            selected ? { backgroundColor: theme.colors.primary } : null,\n          ]}\n        >\n          <Text\n            maxFontSizeMultiplier={1.5}\n            style={[\n              styles.yearLabel,\n              selected\n                ? // eslint-disable-next-line react-native/no-inline-styles\n                  { color: theme.isV3 ? theme.colors.onPrimary : '#fff' }\n                : {\n                    color: theme.isV3\n                      ? theme.colors.onSurfaceVariant\n                      : theme.colors.onSurface,\n                  },\n              { ...textFont },\n            ]}\n            selectable={false}\n          >\n            {year}\n          </Text>\n        </View>\n      </TouchableRipple>\n    </View>\n  )\n}\nconst Year = React.memo(YearPure)\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    top: 56,\n    zIndex: 100,\n  },\n  list: {\n    flex: 1,\n  },\n  year: {\n    flex: 1,\n    marginLeft: 16,\n    marginRight: 16,\n    height: ITEM_HEIGHT,\n    justifyContent: 'center',\n  },\n  yearButton: {\n    borderRadius: 46 / 2,\n    overflow: 'hidden',\n  },\n  yearInner: {\n    borderRadius: 46 / 2,\n    height: 46,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  yearLabel: {\n    fontSize: 16,\n  },\n  opacity0: {\n    opacity: 0,\n  },\n  opacity1: {\n    opacity: 1,\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}