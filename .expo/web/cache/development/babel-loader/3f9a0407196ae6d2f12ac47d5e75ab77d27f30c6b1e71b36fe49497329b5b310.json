{"ast":null,"code":"import * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, TouchableRipple, useTheme } from 'react-native-paper';\nimport { useMemo } from 'react';\nimport Color from 'color';\nimport { inputTypes, useSwitchColors } from './timeUtils';\nimport { DisplayModeContext } from '../contexts/DisplayModeContext';\nexport default function AmPmSwitcher(_ref) {\n  let {\n    onChange,\n    hours,\n    inputType\n  } = _ref;\n  const {\n    setMode,\n    mode\n  } = React.useContext(DisplayModeContext);\n  const theme = useTheme();\n  const backgroundColor = useMemo(() => {\n    if (theme.isV3) {\n      return theme.colors.outline;\n    }\n    return Color(theme.dark ? Color(theme.colors.surface).lighten(1.2).hex() : theme.colors.surface).darken(0.1).hex();\n  }, [theme]);\n  const isAM = mode === 'AM';\n  return React.createElement(View, {\n    style: [styles.root, {\n      borderColor: backgroundColor,\n      borderRadius: theme.roundness * 2,\n      height: inputType === inputTypes.keyboard ? 72 : 80,\n      marginBottom: inputType === 'keyboard' ? 24 : 0\n    }]\n  }, React.createElement(SwitchButton, {\n    label: \"AM\",\n    onPress: () => {\n      setMode('AM');\n      if (hours - 12 >= 0) {\n        onChange(hours - 12);\n      }\n    },\n    selected: isAM,\n    disabled: isAM\n  }), React.createElement(View, {\n    style: [styles.switchSeparator, {\n      backgroundColor\n    }]\n  }), React.createElement(SwitchButton, {\n    label: \"PM\",\n    onPress: () => {\n      setMode('PM');\n      if (hours + 12 <= 24) {\n        onChange(hours + 12);\n      }\n    },\n    selected: !isAM,\n    disabled: !isAM\n  }));\n}\nfunction SwitchButton(_ref2) {\n  let {\n    label,\n    onPress,\n    selected,\n    disabled\n  } = _ref2;\n  const theme = useTheme();\n  const {\n    backgroundColor,\n    color\n  } = useSwitchColors(selected);\n  let textFont = theme !== null && theme !== void 0 && theme.isV3 ? theme.fonts.titleMedium : theme.fonts.medium;\n  return React.createElement(TouchableRipple, {\n    onPress: onPress,\n    style: styles.switchButton,\n    accessibilityLabel: label,\n    accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n    accessibilityComponentType: \"button\",\n    accessibilityRole: \"button\",\n    accessibilityState: {\n      disabled\n    },\n    disabled: disabled\n  }, React.createElement(View, {\n    style: [styles.switchButtonInner, {\n      backgroundColor\n    }]\n  }, React.createElement(Text, {\n    maxFontSizeMultiplier: 1.5,\n    selectable: false,\n    style: [Object.assign({}, textFont, {\n      color: color\n    })]\n  }, label)));\n}\nconst styles = StyleSheet.create({\n  root: {\n    width: 52,\n    borderWidth: 1,\n    overflow: 'hidden'\n  },\n  switchSeparator: {\n    height: 1,\n    width: 52\n  },\n  switchButton: {\n    flex: 1\n  },\n  switchButtonInner: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","View","StyleSheet","Text","TouchableRipple","useTheme","useMemo","Color","inputTypes","useSwitchColors","DisplayModeContext","AmPmSwitcher","_ref","onChange","hours","inputType","setMode","mode","useContext","theme","backgroundColor","isV3","colors","outline","dark","surface","lighten","hex","darken","isAM","createElement","style","styles","root","borderColor","borderRadius","roundness","height","keyboard","marginBottom","SwitchButton","label","onPress","selected","disabled","switchSeparator","_ref2","color","textFont","fonts","titleMedium","medium","switchButton","accessibilityLabel","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityState","switchButtonInner","maxFontSizeMultiplier","selectable","Object","assign","create","width","borderWidth","overflow","flex","alignItems","justifyContent"],"sources":["C:\\Users\\LAPTOP HUU PHUONG\\Desktop\\THcuoiky_react\\THcuoiky\\BaiTapReactNativeTuan7Bai1-master\\node_modules\\react-native-paper-dates\\src\\Time\\AmPmSwitcher.tsx"],"sourcesContent":["import * as React from 'react'\nimport { View, StyleSheet } from 'react-native'\nimport { MD2Theme, Text, TouchableRipple, useTheme } from 'react-native-paper'\nimport { useMemo } from 'react'\nimport Color from 'color'\nimport { inputTypes, PossibleInputTypes, useSwitchColors } from './timeUtils'\nimport { DisplayModeContext } from '../contexts/DisplayModeContext'\n\nexport default function AmPmSwitcher({\n  onChange,\n  hours,\n  inputType,\n}: {\n  hours: number\n  onChange: (newHours: number) => any\n  inputType: PossibleInputTypes\n}) {\n  const { setMode, mode } = React.useContext(DisplayModeContext)\n  const theme = useTheme()\n  const backgroundColor = useMemo<string>(() => {\n    if (theme.isV3) {\n      return theme.colors.outline\n    }\n    return Color(\n      theme.dark\n        ? Color(theme.colors.surface).lighten(1.2).hex()\n        : theme.colors.surface\n    )\n      .darken(0.1)\n      .hex()\n  }, [theme])\n\n  const isAM = mode === 'AM'\n  return (\n    <View\n      style={[\n        styles.root,\n        // eslint-disable-next-line react-native/no-inline-styles\n        {\n          borderColor: backgroundColor,\n          borderRadius: theme.roundness * 2,\n          height: inputType === inputTypes.keyboard ? 72 : 80,\n          marginBottom: inputType === 'keyboard' ? 24 : 0,\n        },\n      ]}\n    >\n      <SwitchButton\n        label=\"AM\"\n        onPress={() => {\n          setMode('AM')\n          if (hours - 12 >= 0) {\n            onChange(hours - 12)\n          }\n        }}\n        selected={isAM}\n        disabled={isAM}\n      />\n      <View style={[styles.switchSeparator, { backgroundColor }]} />\n      <SwitchButton\n        label=\"PM\"\n        onPress={() => {\n          setMode('PM')\n          if (hours + 12 <= 24) {\n            onChange(hours + 12)\n          }\n        }}\n        selected={!isAM}\n        disabled={!isAM}\n      />\n    </View>\n  )\n}\n\nfunction SwitchButton({\n  label,\n  onPress,\n  selected,\n  disabled,\n}: {\n  label: string\n  onPress: (() => any) | undefined\n  selected: boolean\n  disabled: boolean\n}) {\n  const theme = useTheme()\n  const { backgroundColor, color } = useSwitchColors(selected)\n\n  let textFont = theme?.isV3\n    ? theme.fonts.titleMedium\n    : (theme as any as MD2Theme).fonts.medium\n\n  return (\n    <TouchableRipple\n      onPress={onPress}\n      style={styles.switchButton}\n      accessibilityLabel={label}\n      // @ts-ignore old React Native versions\n      accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n      // @ts-ignore old React Native versions\n      accessibilityComponentType=\"button\"\n      accessibilityRole=\"button\"\n      accessibilityState={{ disabled }}\n      disabled={disabled}\n    >\n      <View style={[styles.switchButtonInner, { backgroundColor }]}>\n        <Text\n          maxFontSizeMultiplier={1.5}\n          selectable={false}\n          style={[\n            {\n              ...textFont,\n              color: color,\n            },\n          ]}\n        >\n          {label}\n        </Text>\n      </View>\n    </TouchableRipple>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    width: 52,\n    borderWidth: 1,\n    overflow: 'hidden',\n  },\n  switchSeparator: {\n    height: 1,\n    width: 52,\n  },\n  switchButton: {\n    flex: 1,\n  },\n  switchButtonInner: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n})\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE9B,SAAmBC,IAAI,EAAEC,eAAe,EAAEC,QAAQ,QAAQ,oBAAoB;AAC9E,SAASC,OAAO,QAAQ,OAAO;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAsBC,eAAe,QAAQ,aAAa;AAC7E,SAASC,kBAAkB,QAAQ,gCAAgC;AAEnE,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAQjC;EAAA,IARkC;IACnCC,QAAQ;IACRC,KAAK;IACLC;EAKF,CAAC,GAAAH,IAAA;EACC,MAAM;IAAEI,OAAO;IAAEC;EAAK,CAAC,GAAGjB,KAAK,CAACkB,UAAU,CAACR,kBAAkB,CAAC;EAC9D,MAAMS,KAAK,GAAGd,QAAQ,CAAC,CAAC;EACxB,MAAMe,eAAe,GAAGd,OAAO,CAAS,MAAM;IAC5C,IAAIa,KAAK,CAACE,IAAI,EAAE;MACd,OAAOF,KAAK,CAACG,MAAM,CAACC,OAAO;IAC7B;IACA,OAAOhB,KAAK,CACVY,KAAK,CAACK,IAAI,GACNjB,KAAK,CAACY,KAAK,CAACG,MAAM,CAACG,OAAO,CAAC,CAACC,OAAO,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,GAC9CR,KAAK,CAACG,MAAM,CAACG,OACnB,CAAC,CACEG,MAAM,CAAC,GAAG,CAAC,CACXD,GAAG,CAAC,CAAC;EACV,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,MAAMU,IAAI,GAAGZ,IAAI,KAAK,IAAI;EAC1B,OACEjB,KAAA,CAAA8B,aAAA,CAAC7B,IAAI;IACH8B,KAAK,EAAE,CACLC,MAAM,CAACC,IAAI,EAEX;MACEC,WAAW,EAAEd,eAAe;MAC5Be,YAAY,EAAEhB,KAAK,CAACiB,SAAS,GAAG,CAAC;MACjCC,MAAM,EAAEtB,SAAS,KAAKP,UAAU,CAAC8B,QAAQ,GAAG,EAAE,GAAG,EAAE;MACnDC,YAAY,EAAExB,SAAS,KAAK,UAAU,GAAG,EAAE,GAAG;IAChD,CAAC;EACD,GAEFf,KAAA,CAAA8B,aAAA,CAACU,YAAY;IACXC,KAAK,EAAC,IAAI;IACVC,OAAO,EAAEA,CAAA,KAAM;MACb1B,OAAO,CAAC,IAAI,CAAC;MACb,IAAIF,KAAK,GAAG,EAAE,IAAI,CAAC,EAAE;QACnBD,QAAQ,CAACC,KAAK,GAAG,EAAE,CAAC;MACtB;IACF,CAAE;IACF6B,QAAQ,EAAEd,IAAK;IACfe,QAAQ,EAAEf;EAAK,CAChB,CAAC,EACF7B,KAAA,CAAA8B,aAAA,CAAC7B,IAAI;IAAC8B,KAAK,EAAE,CAACC,MAAM,CAACa,eAAe,EAAE;MAAEzB;IAAgB,CAAC;EAAE,CAAE,CAAC,EAC9DpB,KAAA,CAAA8B,aAAA,CAACU,YAAY;IACXC,KAAK,EAAC,IAAI;IACVC,OAAO,EAAEA,CAAA,KAAM;MACb1B,OAAO,CAAC,IAAI,CAAC;MACb,IAAIF,KAAK,GAAG,EAAE,IAAI,EAAE,EAAE;QACpBD,QAAQ,CAACC,KAAK,GAAG,EAAE,CAAC;MACtB;IACF,CAAE;IACF6B,QAAQ,EAAE,CAACd,IAAK;IAChBe,QAAQ,EAAE,CAACf;EAAK,CACjB,CACG,CAAC;AAEX;AAEA,SAASW,YAAYA,CAAAM,KAAA,EAUlB;EAAA,IAVmB;IACpBL,KAAK;IACLC,OAAO;IACPC,QAAQ;IACRC;EAMF,CAAC,GAAAE,KAAA;EACC,MAAM3B,KAAK,GAAGd,QAAQ,CAAC,CAAC;EACxB,MAAM;IAAEe,eAAe;IAAE2B;EAAM,CAAC,GAAGtC,eAAe,CAACkC,QAAQ,CAAC;EAE5D,IAAIK,QAAQ,GAAG7B,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEE,IAAI,GACtBF,KAAK,CAAC8B,KAAK,CAACC,WAAW,GACtB/B,KAAK,CAAqB8B,KAAK,CAACE,MAAM;EAE3C,OACEnD,KAAA,CAAA8B,aAAA,CAAC1B,eAAe;IACdsC,OAAO,EAAEA,OAAQ;IACjBX,KAAK,EAAEC,MAAM,CAACoB,YAAa;IAC3BC,kBAAkB,EAAEZ,KAAA;IAEpBa,mBAAmB,EAAEV,QAAQ,GAAG,CAAC,QAAQ,EAAE,UAAU,CAAC,GAAG;IAEzDW,0BAA0B,EAAC,QAAQ;IACnCC,iBAAiB,EAAC,QAAQ;IAC1BC,kBAAkB,EAAE;MAAEb;IAAS,CAAE;IACjCA,QAAQ,EAAEA;EAAS,GAEnB5C,KAAA,CAAA8B,aAAA,CAAC7B,IAAI;IAAC8B,KAAK,EAAE,CAACC,MAAM,CAAC0B,iBAAiB,EAAE;MAAEtC;IAAgB,CAAC;EAAE,GAC3DpB,KAAA,CAAA8B,aAAA,CAAC3B,IAAI;IACHwD,qBAAqB,EAAE,GAAI;IAC3BC,UAAU,EAAE,KAAM;IAClB7B,KAAK,EAAE,CAAA8B,MAAA,CAAAC,MAAA,KAEAd,QAAQ;MACXD,KAAK,EAAEA;IAAA;EAET,GAEDN,KACG,CACF,CACS,CAAC;AAEtB;AAEA,MAAMT,MAAM,GAAG9B,UAAU,CAAC6D,MAAM,CAAC;EAC/B9B,IAAI,EAAE;IACJ+B,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,CAAC;IACdC,QAAQ,EAAE;EACZ,CAAC;EACDrB,eAAe,EAAE;IACfR,MAAM,EAAE,CAAC;IACT2B,KAAK,EAAE;EACT,CAAC;EACDZ,YAAY,EAAE;IACZe,IAAI,EAAE;EACR,CAAC;EACDT,iBAAiB,EAAE;IACjBS,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}