{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"left\", \"right\", \"title\", \"description\", \"onPress\", \"theme\", \"style\", \"titleStyle\", \"titleNumberOfLines\", \"descriptionNumberOfLines\", \"titleEllipsizeMode\", \"descriptionEllipsizeMode\", \"descriptionStyle\", \"descriptionMaxFontSizeMultiplier\", \"titleMaxFontSizeMultiplier\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { getLeftStyles, getRightStyles } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nconst ListItem = _ref => {\n  let {\n      left,\n      right,\n      title,\n      description,\n      onPress,\n      theme: themeOverrides,\n      style,\n      titleStyle,\n      titleNumberOfLines = 1,\n      descriptionNumberOfLines = 2,\n      titleEllipsizeMode,\n      descriptionEllipsizeMode,\n      descriptionStyle,\n      descriptionMaxFontSizeMultiplier,\n      titleMaxFontSizeMultiplier\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const theme = useInternalTheme(themeOverrides);\n  const [alignToTop, setAlignToTop] = React.useState(false);\n  const onDescriptionTextLayout = event => {\n    if (!theme.isV3) {\n      return;\n    }\n    const {\n      nativeEvent\n    } = event;\n    setAlignToTop(nativeEvent.lines.length >= 2);\n  };\n  const renderDescription = (descriptionColor, description) => {\n    return typeof description === 'function' ? description({\n      selectable: false,\n      ellipsizeMode: descriptionEllipsizeMode,\n      color: descriptionColor,\n      fontSize: styles.description.fontSize\n    }) : React.createElement(Text, {\n      selectable: false,\n      numberOfLines: descriptionNumberOfLines,\n      ellipsizeMode: descriptionEllipsizeMode,\n      style: [styles.description, {\n        color: descriptionColor\n      }, descriptionStyle],\n      onTextLayout: onDescriptionTextLayout,\n      maxFontSizeMultiplier: descriptionMaxFontSizeMultiplier\n    }, description);\n  };\n  const renderTitle = () => {\n    const titleColor = theme.isV3 ? theme.colors.onSurface : color(theme.colors.text).alpha(0.87).rgb().string();\n    return typeof title === 'function' ? title({\n      selectable: false,\n      ellipsizeMode: titleEllipsizeMode,\n      color: titleColor,\n      fontSize: styles.title.fontSize\n    }) : React.createElement(Text, {\n      selectable: false,\n      ellipsizeMode: titleEllipsizeMode,\n      numberOfLines: titleNumberOfLines,\n      style: [styles.title, {\n        color: titleColor\n      }, titleStyle],\n      maxFontSizeMultiplier: titleMaxFontSizeMultiplier\n    }, title);\n  };\n  const descriptionColor = theme.isV3 ? theme.colors.onSurfaceVariant : color(theme.colors.text).alpha(0.54).rgb().string();\n  return React.createElement(TouchableRipple, _extends({}, rest, {\n    style: [theme.isV3 ? styles.containerV3 : styles.container, style],\n    onPress: onPress,\n    theme: theme\n  }), React.createElement(View, {\n    style: theme.isV3 ? styles.rowV3 : styles.row\n  }, left ? left({\n    color: descriptionColor,\n    style: getLeftStyles(alignToTop, description, theme.isV3)\n  }) : null, React.createElement(View, {\n    style: [theme.isV3 ? styles.itemV3 : styles.item, styles.content]\n  }, renderTitle(), description ? renderDescription(descriptionColor, description) : null), right ? right({\n    color: descriptionColor,\n    style: getRightStyles(alignToTop, description, theme.isV3)\n  }) : null));\n};\nListItem.displayName = 'List.Item';\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8\n  },\n  containerV3: {\n    paddingVertical: 8,\n    paddingRight: 24\n  },\n  row: {\n    width: '100%',\n    flexDirection: 'row'\n  },\n  rowV3: {\n    width: '100%',\n    flexDirection: 'row',\n    marginVertical: 6\n  },\n  title: {\n    fontSize: 16\n  },\n  description: {\n    fontSize: 14\n  },\n  item: {\n    marginVertical: 6,\n    paddingLeft: 8\n  },\n  itemV3: {\n    paddingLeft: 16\n  },\n  content: {\n    flexShrink: 1,\n    flexGrow: 1,\n    justifyContent: 'center'\n  }\n});\nexport default ListItem;","map":{"version":3,"names":["React","StyleSheet","View","color","getLeftStyles","getRightStyles","useInternalTheme","TouchableRipple","Text","ListItem","_ref","left","right","title","description","onPress","theme","themeOverrides","style","titleStyle","titleNumberOfLines","descriptionNumberOfLines","titleEllipsizeMode","descriptionEllipsizeMode","descriptionStyle","descriptionMaxFontSizeMultiplier","titleMaxFontSizeMultiplier","rest","_objectWithoutPropertiesLoose","_excluded","alignToTop","setAlignToTop","useState","onDescriptionTextLayout","event","isV3","nativeEvent","lines","length","renderDescription","descriptionColor","selectable","ellipsizeMode","fontSize","styles","createElement","numberOfLines","onTextLayout","maxFontSizeMultiplier","renderTitle","titleColor","colors","onSurface","text","alpha","rgb","string","onSurfaceVariant","_extends","containerV3","container","rowV3","row","itemV3","item","content","displayName","create","padding","paddingVertical","paddingRight","width","flexDirection","marginVertical","paddingLeft","flexShrink","flexGrow","justifyContent"],"sources":["C:\\Users\\LAPTOP HUU PHUONG\\Desktop\\THcuoiky_react\\THcuoiky\\BaiTapReactNativeTuan7Bai1-master\\node_modules\\react-native-paper\\src\\components\\List\\ListItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  NativeSyntheticEvent,\n  StyleProp,\n  StyleSheet,\n  TextLayoutEventData,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\n\nimport { Style, getLeftStyles, getRightStyles } from './utils';\nimport { useInternalTheme } from '../../core/theming';\nimport type { $RemoveChildren, EllipsizeProp, ThemeProp } from '../../types';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\n\ntype Title =\n  | React.ReactNode\n  | ((props: {\n      selectable: boolean;\n      ellipsizeMode: EllipsizeProp | undefined;\n      color: string;\n      fontSize: number;\n    }) => React.ReactNode);\n\ntype Description =\n  | React.ReactNode\n  | ((props: {\n      selectable: boolean;\n      ellipsizeMode: EllipsizeProp | undefined;\n      color: string;\n      fontSize: number;\n    }) => React.ReactNode);\n\nexport type Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Title text for the list item.\n   */\n  title: Title;\n  /**\n   * Description text for the list item or callback which returns a React element to display the description.\n   */\n  description?: Description;\n  /**\n   * Callback which returns a React element to display on the left side.\n   */\n  left?: (props: { color: string; style: Style }) => React.ReactNode;\n  /**\n   * Callback which returns a React element to display on the right side.\n   */\n  right?: (props: { color: string; style?: Style }) => React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * Style that is passed to the wrapping TouchableRipple element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Style that is passed to Description element.\n   */\n  descriptionStyle?: StyleProp<TextStyle>;\n  /**\n   * Truncate Title text such that the total number of lines does not\n   * exceed this number.\n   */\n  titleNumberOfLines?: number;\n  /**\n   * Truncate Description text such that the total number of lines does not\n   * exceed this number.\n   */\n  descriptionNumberOfLines?: number;\n  /**\n   * Ellipsize Mode for the Title.  One of `'head'`, `'middle'`, `'tail'`, `'clip'`.\n   *\n   * See [`ellipsizeMode`](https://reactnative.dev/docs/text#ellipsizemode)\n   */\n  titleEllipsizeMode?: EllipsizeProp;\n  /**\n   * Ellipsize Mode for the Description.  One of `'head'`, `'middle'`, `'tail'`, `'clip'`.\n   *\n   * See [`ellipsizeMode`](https://reactnative.dev/docs/text#ellipsizemode)\n   */\n  descriptionEllipsizeMode?: EllipsizeProp;\n  /**\n   * Specifies the largest possible scale a title font can reach.\n   */\n  titleMaxFontSizeMultiplier?: number;\n  /**\n   * Specifies the largest possible scale a description font can reach.\n   */\n  descriptionMaxFontSizeMultiplier?: number;\n};\n\n/**\n * A component to show tiles inside a List.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <List.Item\n *     title=\"First Item\"\n *     description=\"Item description\"\n *     left={props => <List.Icon {...props} icon=\"folder\" />}\n *   />\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableRipple props https://callstack.github.io/react-native-paper/docs/components/TouchableRipple\n */\nconst ListItem = ({\n  left,\n  right,\n  title,\n  description,\n  onPress,\n  theme: themeOverrides,\n  style,\n  titleStyle,\n  titleNumberOfLines = 1,\n  descriptionNumberOfLines = 2,\n  titleEllipsizeMode,\n  descriptionEllipsizeMode,\n  descriptionStyle,\n  descriptionMaxFontSizeMultiplier,\n  titleMaxFontSizeMultiplier,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n  const [alignToTop, setAlignToTop] = React.useState(false);\n\n  const onDescriptionTextLayout = (\n    event: NativeSyntheticEvent<TextLayoutEventData>\n  ) => {\n    if (!theme.isV3) {\n      return;\n    }\n    const { nativeEvent } = event;\n    setAlignToTop(nativeEvent.lines.length >= 2);\n  };\n\n  const renderDescription = (\n    descriptionColor: string,\n    description?: Description | null\n  ) => {\n    return typeof description === 'function' ? (\n      description({\n        selectable: false,\n        ellipsizeMode: descriptionEllipsizeMode,\n        color: descriptionColor,\n        fontSize: styles.description.fontSize,\n      })\n    ) : (\n      <Text\n        selectable={false}\n        numberOfLines={descriptionNumberOfLines}\n        ellipsizeMode={descriptionEllipsizeMode}\n        style={[\n          styles.description,\n          { color: descriptionColor },\n          descriptionStyle,\n        ]}\n        onTextLayout={onDescriptionTextLayout}\n        maxFontSizeMultiplier={descriptionMaxFontSizeMultiplier}\n      >\n        {description}\n      </Text>\n    );\n  };\n\n  const renderTitle = () => {\n    const titleColor = theme.isV3\n      ? theme.colors.onSurface\n      : color(theme.colors.text).alpha(0.87).rgb().string();\n\n    return typeof title === 'function' ? (\n      title({\n        selectable: false,\n        ellipsizeMode: titleEllipsizeMode,\n        color: titleColor,\n        fontSize: styles.title.fontSize,\n      })\n    ) : (\n      <Text\n        selectable={false}\n        ellipsizeMode={titleEllipsizeMode}\n        numberOfLines={titleNumberOfLines}\n        style={[styles.title, { color: titleColor }, titleStyle]}\n        maxFontSizeMultiplier={titleMaxFontSizeMultiplier}\n      >\n        {title}\n      </Text>\n    );\n  };\n\n  const descriptionColor = theme.isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n\n  return (\n    <TouchableRipple\n      {...rest}\n      style={[theme.isV3 ? styles.containerV3 : styles.container, style]}\n      onPress={onPress}\n      theme={theme}\n    >\n      <View style={theme.isV3 ? styles.rowV3 : styles.row}>\n        {left\n          ? left({\n              color: descriptionColor,\n              style: getLeftStyles(alignToTop, description, theme.isV3),\n            })\n          : null}\n        <View\n          style={[theme.isV3 ? styles.itemV3 : styles.item, styles.content]}\n        >\n          {renderTitle()}\n\n          {description\n            ? renderDescription(descriptionColor, description)\n            : null}\n        </View>\n        {right\n          ? right({\n              color: descriptionColor,\n              style: getRightStyles(alignToTop, description, theme.isV3),\n            })\n          : null}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nListItem.displayName = 'List.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  containerV3: {\n    paddingVertical: 8,\n    paddingRight: 24,\n  },\n  row: {\n    width: '100%',\n    flexDirection: 'row',\n  },\n  rowV3: {\n    width: '100%',\n    flexDirection: 'row',\n    marginVertical: 6,\n  },\n  title: {\n    fontSize: 16,\n  },\n  description: {\n    fontSize: 14,\n  },\n  item: {\n    marginVertical: 6,\n    paddingLeft: 8,\n  },\n  itemV3: {\n    paddingLeft: 16,\n  },\n  content: {\n    flexShrink: 1,\n    flexGrow: 1,\n    justifyContent: 'center',\n  },\n});\n\nexport default ListItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}