{"ast":null,"code":"let translationsPerLocale = {};\nexport function getTranslation(locale, key, fallback) {\n  const l = locale || 'en';\n  const translationForLocale = translationsPerLocale[l];\n  if (!translationForLocale) {\n    console.warn(`[react-native-paper-dates] The locale ${locale} is not registered, see README!, key: ${key}`);\n    return fallback || key;\n  }\n  const translation = translationsPerLocale[l][key];\n  if (!translation) {\n    console.warn(`[react-native-paper-dates] The locale ${locale} is registered, but ${key} is missing`);\n  }\n  return translation || fallback || key;\n}\nexport function registerTranslation(locale, translations) {\n  translationsPerLocale[locale] = translations;\n}","map":{"version":3,"names":["translationsPerLocale","getTranslation","locale","key","fallback","l","translationForLocale","console","warn","translation","registerTranslation","translations"],"sources":["C:\\Users\\LAPTOP HUU PHUONG\\Desktop\\THcuoiky_react\\THcuoiky\\BaiTapReactNativeTuan7Bai1-master\\node_modules\\react-native-paper-dates\\src\\translations\\utils.ts"],"sourcesContent":["export type TranslationsType = {\n  selectSingle: string\n  selectMultiple: string\n  selectRange: string\n  save: string\n  notAccordingToDateFormat: (inputFormat: string) => string\n  mustBeHigherThan: (date: string) => string\n  mustBeLowerThan: (date: string) => string\n  mustBeBetween: (startDate: string, endDate: string) => string\n  dateIsDisabled: string\n  previous: string\n  next: string\n  typeInDate: string\n  pickDateFromCalendar: string\n  close: string\n}\n\nlet translationsPerLocale: Record<string, TranslationsType> = {}\n\nexport function getTranslation<K extends keyof TranslationsType>(\n  locale: string | undefined,\n  key: K,\n  fallback?: any\n) {\n  const l = locale || 'en'\n  const translationForLocale = translationsPerLocale[l]\n  if (!translationForLocale) {\n    console.warn(\n      `[react-native-paper-dates] The locale ${locale} is not registered, see README!, key: ${key}`\n    )\n    return fallback || key\n  }\n  const translation = translationsPerLocale[l][key]\n  if (!translation) {\n    console.warn(\n      `[react-native-paper-dates] The locale ${locale} is registered, but ${key} is missing`\n    )\n  }\n  return translation || fallback || key\n}\n\nexport function registerTranslation(\n  locale: string,\n  translations: TranslationsType\n) {\n  translationsPerLocale[locale] = translations\n}\n"],"mappings":"AAiBA,IAAIA,qBAAuD,GAAG,CAAC,CAAC;AAEhE,OAAO,SAASC,cAAcA,CAC5BC,MAA0B,EAC1BC,GAAM,EACNC,QAAc,EACd;EACA,MAAMC,CAAC,GAAGH,MAAM,IAAI,IAAI;EACxB,MAAMI,oBAAoB,GAAGN,qBAAqB,CAACK,CAAC,CAAC;EACrD,IAAI,CAACC,oBAAoB,EAAE;IACzBC,OAAO,CAACC,IAAI,CACT,yCAAwCN,MAAO,yCAAwCC,GAAI,EAC9F,CAAC;IACD,OAAOC,QAAQ,IAAID,GAAG;EACxB;EACA,MAAMM,WAAW,GAAGT,qBAAqB,CAACK,CAAC,CAAC,CAACF,GAAG,CAAC;EACjD,IAAI,CAACM,WAAW,EAAE;IAChBF,OAAO,CAACC,IAAI,CACT,yCAAwCN,MAAO,uBAAsBC,GAAI,aAC5E,CAAC;EACH;EACA,OAAOM,WAAW,IAAIL,QAAQ,IAAID,GAAG;AACvC;AAEA,OAAO,SAASO,mBAAmBA,CACjCR,MAAc,EACdS,YAA8B,EAC9B;EACAX,qBAAqB,CAACE,MAAM,CAAC,GAAGS,YAAY;AAC9C","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}