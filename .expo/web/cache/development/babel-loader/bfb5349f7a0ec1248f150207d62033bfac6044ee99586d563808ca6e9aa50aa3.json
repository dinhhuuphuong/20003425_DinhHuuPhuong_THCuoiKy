{"ast":null,"code":"import * as React from 'react';\nimport { Text, TouchableRipple } from 'react-native-paper';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport DayRange from './DayRange';\nimport { daySize } from './dateUtils';\nfunction EmptyDayPure() {\n  return React.createElement(View, {\n    style: styles.empty\n  });\n}\nexport const EmptyDay = React.memo(EmptyDayPure);\nfunction Day(props) {\n  const {\n    day,\n    month,\n    year,\n    selected,\n    inRange,\n    leftCrop,\n    rightCrop,\n    onPressDate,\n    primaryColor,\n    selectColor,\n    isToday,\n    disabled,\n    textColorOnPrimary,\n    theme\n  } = props;\n  const onPress = React.useCallback(() => {\n    onPressDate(new Date(year, month, day));\n  }, [onPressDate, year, month, day]);\n  const borderColor = theme.isV3 ? theme.colors.primary : selected || inRange && theme.dark ? textColorOnPrimary : theme.dark ? '#fff' : '#000';\n  const textColor = theme.isV3 && selected ? theme.colors.onPrimary : theme.isV3 && inRange && theme.dark ? theme.colors.onPrimaryContainer : selected || inRange && theme.dark ? textColorOnPrimary : theme.isV3 ? theme.colors.onSurface : undefined;\n  let textFont = theme !== null && theme !== void 0 && theme.isV3 ? theme.fonts.bodySmall : theme.fonts.medium;\n  return React.createElement(View, {\n    style: [styles.root, disabled && styles.disabled]\n  }, React.createElement(DayRange, {\n    inRange: inRange,\n    leftCrop: leftCrop,\n    rightCrop: rightCrop,\n    selectColor: selectColor\n  }), React.createElement(TouchableRipple, {\n    testID: `react-native-paper-dates-day-${year}-${month}-${day}`,\n    disabled: disabled,\n    borderless: true,\n    onPress: disabled ? undefined : onPress,\n    style: [styles.button, {\n      backgroundColor: inRange ? selectColor : undefined\n    }],\n    accessibilityRole: \"button\"\n  }, React.createElement(View, {\n    style: [styles.day, isToday ? {\n      borderColor: borderColor\n    } : null, selected ? {\n      backgroundColor: primaryColor\n    } : null]\n  }, React.createElement(Text, {\n    maxFontSizeMultiplier: 1.5,\n    style: [textColor ? {\n      color: theme.isV3 && isToday && selected ? textColor : theme.isV3 && isToday ? theme.colors.primary : textColor\n    } : undefined, Object.assign({}, textFont)],\n    selectable: false\n  }, day))));\n}\nconst styles = StyleSheet.create({\n  empty: {\n    flex: 1,\n    flexBasis: 0\n  },\n  disabled: {\n    opacity: 0.3\n  },\n  root: {\n    flexBasis: 0,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative'\n  },\n  button: {\n    width: daySize,\n    height: daySize,\n    overflow: 'hidden',\n    borderRadius: daySize / 2\n  },\n  day: {\n    flexBasis: 0,\n    flex: 1,\n    borderRadius: daySize / 2,\n    width: daySize,\n    height: daySize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: 'transparent'\n  },\n  flex1: {\n    flex: 1\n  }\n});\nexport default React.memo(Day);","map":{"version":3,"names":["React","Text","TouchableRipple","StyleSheet","View","DayRange","daySize","EmptyDayPure","createElement","style","styles","empty","EmptyDay","memo","Day","props","day","month","year","selected","inRange","leftCrop","rightCrop","onPressDate","primaryColor","selectColor","isToday","disabled","textColorOnPrimary","theme","onPress","useCallback","Date","borderColor","isV3","colors","primary","dark","textColor","onPrimary","onPrimaryContainer","onSurface","undefined","textFont","fonts","bodySmall","medium","root","testID","borderless","button","backgroundColor","accessibilityRole","maxFontSizeMultiplier","color","Object","assign","selectable","create","flex","flexBasis","opacity","justifyContent","alignItems","position","width","height","overflow","borderRadius","borderWidth","flex1"],"sources":["C:\\Users\\LAPTOP HUU PHUONG\\Desktop\\THcuoiky_react\\THcuoiky\\BaiTapReactNativeTuan7Bai1-master\\node_modules\\react-native-paper-dates\\src\\Date\\Day.tsx"],"sourcesContent":["import * as React from 'react'\nimport { MD2Theme, Text, TouchableRipple } from 'react-native-paper'\nimport { StyleSheet, View } from 'react-native'\nimport DayRange from './DayRange'\nimport { daySize } from './dateUtils'\n\nimport type { PaperTheme } from '../utils'\n\nfunction EmptyDayPure() {\n  return <View style={styles.empty} />\n}\nexport const EmptyDay = React.memo(EmptyDayPure)\n\nfunction Day(props: {\n  theme: PaperTheme\n  textColorOnPrimary: string\n  day: number\n  month: number\n  year: number\n  selected: boolean\n  inRange: boolean\n  leftCrop: boolean\n  rightCrop: boolean\n  primaryColor: string\n  selectColor: string\n  isToday: boolean\n  disabled: boolean\n  onPressDate: (date: Date) => any\n}) {\n  const {\n    day,\n    month,\n    year,\n    selected,\n    inRange,\n    leftCrop,\n    rightCrop,\n    onPressDate,\n    primaryColor,\n    selectColor,\n    isToday,\n    disabled,\n    textColorOnPrimary,\n    theme,\n  } = props\n  const onPress = React.useCallback(() => {\n    onPressDate(new Date(year, month, day))\n  }, [onPressDate, year, month, day])\n\n  const borderColor = theme.isV3\n    ? theme.colors.primary\n    : selected || (inRange && theme.dark)\n    ? textColorOnPrimary\n    : theme.dark\n    ? '#fff'\n    : '#000'\n\n  const textColor =\n    theme.isV3 && selected\n      ? theme.colors.onPrimary\n      : theme.isV3 && inRange && theme.dark\n      ? theme.colors.onPrimaryContainer\n      : selected || (inRange && theme.dark)\n      ? textColorOnPrimary\n      : theme.isV3\n      ? theme.colors.onSurface\n      : undefined\n\n  let textFont = theme?.isV3\n    ? theme.fonts.bodySmall\n    : (theme as any as MD2Theme).fonts.medium\n\n  return (\n    <View style={[styles.root, disabled && styles.disabled]}>\n      <DayRange\n        inRange={inRange}\n        leftCrop={leftCrop}\n        rightCrop={rightCrop}\n        selectColor={selectColor}\n      />\n      <TouchableRipple\n        testID={`react-native-paper-dates-day-${year}-${month}-${day}`}\n        disabled={disabled}\n        borderless={true}\n        onPress={disabled ? undefined : onPress}\n        style={[\n          styles.button,\n          { backgroundColor: inRange ? selectColor : undefined },\n        ]}\n        accessibilityRole=\"button\"\n      >\n        <View\n          style={[\n            styles.day,\n            isToday ? { borderColor: borderColor } : null,\n            selected ? { backgroundColor: primaryColor } : null,\n          ]}\n        >\n          <Text\n            maxFontSizeMultiplier={1.5}\n            style={[\n              textColor\n                ? {\n                    color:\n                      theme.isV3 && isToday && selected\n                        ? textColor\n                        : theme.isV3 && isToday\n                        ? theme.colors.primary\n                        : textColor,\n                  }\n                : undefined,\n              { ...textFont },\n            ]}\n            selectable={false}\n          >\n            {day}\n          </Text>\n        </View>\n      </TouchableRipple>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  empty: {\n    flex: 1,\n    flexBasis: 0,\n  },\n  disabled: {\n    opacity: 0.3,\n  },\n  root: {\n    flexBasis: 0,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n  },\n  button: {\n    width: daySize,\n    height: daySize,\n    overflow: 'hidden',\n    borderRadius: daySize / 2,\n  },\n  day: {\n    flexBasis: 0,\n    flex: 1,\n    borderRadius: daySize / 2,\n    width: daySize,\n    height: daySize,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: 'transparent',\n  },\n  flex1: {\n    flex: 1,\n  },\n})\n\nexport default React.memo(Day)\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}