{"ast":null,"code":"import { useInputFormat, useInputFormatter, useRangeChecker } from './dateUtils';\nimport * as React from 'react';\nimport { getTranslation } from '../translations/utils';\nexport default function useDateInput(_ref) {\n  let {\n    locale,\n    value,\n    validRange,\n    inputMode,\n    onChange,\n    onValidationError\n  } = _ref;\n  const {\n    isDisabled,\n    isWithinValidRange,\n    validStart,\n    validEnd\n  } = useRangeChecker(validRange);\n  const [error, setError] = React.useState(null);\n  const formatter = useInputFormatter({\n    locale\n  });\n  const inputFormat = useInputFormat({\n    formatter,\n    locale\n  });\n  const formattedValue = value ? formatter.format(value) : '';\n  const onChangeText = date => {\n    const dayIndex = inputFormat.indexOf('DD');\n    const monthIndex = inputFormat.indexOf('MM');\n    const yearIndex = locale === 'pt' ? inputFormat.indexOf('AAAA') : inputFormat.indexOf('YYYY');\n    const day = Number(date.slice(dayIndex, dayIndex + 2));\n    const year = Number(date.slice(yearIndex, yearIndex + 4));\n    const month = Number(date.slice(monthIndex, monthIndex + 2));\n    if (Number.isNaN(day) || Number.isNaN(year) || Number.isNaN(month)) {\n      const inputError = getTranslation(locale, 'notAccordingToDateFormat', () => 'notAccordingToDateFormat')(inputFormat);\n      setError(inputError);\n      onValidationError && onValidationError(inputError);\n      return;\n    }\n    const finalDate = inputMode === 'end' ? new Date(year, month - 1, day, 23, 59, 59) : new Date(year, month - 1, day);\n    if (isDisabled(finalDate)) {\n      const inputError = getTranslation(locale, 'dateIsDisabled');\n      setError(inputError);\n      onValidationError && onValidationError(inputError);\n      return;\n    }\n    if (!isWithinValidRange(finalDate)) {\n      let errors = validStart && validEnd ? [`${getTranslation(locale, 'mustBeBetween', () => 'mustBeBetween')(formatter.format(validStart), formatter.format(validEnd))}`] : [validStart ? getTranslation(locale, 'mustBeHigherThan', () => 'mustBeHigherThan')(formatter.format(validStart)) : '', validEnd ? getTranslation(locale, 'mustBeLowerThan', () => 'mustBeLowerThan')(formatter.format(validEnd)) : ''];\n      const inputError = errors.filter(n => n).join(' ');\n      setError(errors.filter(n => n).join(' '));\n      onValidationError && onValidationError(inputError);\n      return;\n    }\n    setError(null);\n    onValidationError && onValidationError(null);\n    if (inputMode === 'end') {\n      onChange(finalDate);\n    } else {\n      onChange(finalDate);\n    }\n  };\n  return {\n    onChange,\n    error,\n    formattedValue,\n    onChangeText,\n    inputFormat\n  };\n}","map":{"version":3,"names":["useInputFormat","useInputFormatter","useRangeChecker","React","getTranslation","useDateInput","_ref","locale","value","validRange","inputMode","onChange","onValidationError","isDisabled","isWithinValidRange","validStart","validEnd","error","setError","useState","formatter","inputFormat","formattedValue","format","onChangeText","date","dayIndex","indexOf","monthIndex","yearIndex","day","Number","slice","year","month","isNaN","inputError","finalDate","Date","errors","filter","n","join"],"sources":["C:\\Users\\LAPTOP HUU PHUONG\\Desktop\\THcuoiky_react\\THcuoiky\\BaiTapReactNativeTuan7Bai1-master\\node_modules\\react-native-paper-dates\\src\\Date\\inputUtils.ts"],"sourcesContent":["import { useInputFormat, useInputFormatter, useRangeChecker } from './dateUtils'\nimport * as React from 'react'\nimport type { ValidRangeType } from './Calendar'\nimport { getTranslation } from '../translations/utils'\n\nexport default function useDateInput({\n  locale,\n  value,\n  validRange,\n  inputMode,\n  onChange,\n  onValidationError,\n}: {\n  onChange: (d: Date) => void\n  locale: undefined | string\n  value: Date | undefined\n  validRange: ValidRangeType | undefined\n  inputMode: 'start' | 'end'\n  onValidationError?: ((error: string | null) => void) | undefined\n}) {\n  const { isDisabled, isWithinValidRange, validStart, validEnd } =\n    useRangeChecker(validRange)\n  const [error, setError] = React.useState<null | string>(null)\n  const formatter = useInputFormatter({ locale })\n  const inputFormat = useInputFormat({ formatter, locale })\n  const formattedValue = value ? formatter.format(value) : ''\n  const onChangeText = (date: string) => {\n    const dayIndex = inputFormat.indexOf('DD')\n    const monthIndex = inputFormat.indexOf('MM')\n    const yearIndex =\n      locale === 'pt'\n        ? inputFormat.indexOf('AAAA')\n        : inputFormat.indexOf('YYYY')\n\n    const day = Number(date.slice(dayIndex, dayIndex + 2))\n    const year = Number(date.slice(yearIndex, yearIndex + 4))\n    const month = Number(date.slice(monthIndex, monthIndex + 2))\n\n    if (Number.isNaN(day) || Number.isNaN(year) || Number.isNaN(month)) {\n      const inputError = getTranslation(\n        locale,\n        'notAccordingToDateFormat',\n        () => 'notAccordingToDateFormat'\n      )(inputFormat)\n      setError(inputError)\n      onValidationError && onValidationError(inputError)\n      return\n    }\n\n    const finalDate =\n      inputMode === 'end'\n        ? new Date(year, month - 1, day, 23, 59, 59)\n        : new Date(year, month - 1, day)\n\n    if (isDisabled(finalDate)) {\n      const inputError = getTranslation(locale, 'dateIsDisabled')\n      setError(inputError)\n      onValidationError && onValidationError(inputError)\n      return\n    }\n    if (!isWithinValidRange(finalDate)) {\n      let errors =\n        validStart && validEnd\n          ? [\n              `${getTranslation(\n                locale,\n                'mustBeBetween',\n                () => 'mustBeBetween'\n              )(formatter.format(validStart), formatter.format(validEnd))}`,\n            ]\n          : [\n              validStart\n                ? getTranslation(\n                    locale,\n                    'mustBeHigherThan',\n                    () => 'mustBeHigherThan'\n                  )(formatter.format(validStart))\n                : '',\n              validEnd\n                ? getTranslation(\n                    locale,\n                    'mustBeLowerThan',\n                    () => 'mustBeLowerThan'\n                  )(formatter.format(validEnd))\n                : '',\n            ]\n      const inputError = errors.filter((n) => n).join(' ')\n      setError(errors.filter((n) => n).join(' '))\n      onValidationError && onValidationError(inputError)\n      return\n    }\n\n    setError(null)\n    onValidationError && onValidationError(null)\n    if (inputMode === 'end') {\n      onChange(finalDate)\n    } else {\n      onChange(finalDate)\n    }\n  }\n  return {\n    onChange,\n    error,\n    formattedValue,\n    onChangeText,\n    inputFormat,\n  }\n}\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,iBAAiB,EAAEC,eAAe,QAAQ,aAAa;AAChF,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,SAASC,cAAc,QAAQ,uBAAuB;AAEtD,eAAe,SAASC,YAAYA,CAAAC,IAAA,EAcjC;EAAA,IAdkC;IACnCC,MAAM;IACNC,KAAK;IACLC,UAAU;IACVC,SAAS;IACTC,QAAQ;IACRC;EAQF,CAAC,GAAAN,IAAA;EACC,MAAM;IAAEO,UAAU;IAAEC,kBAAkB;IAAEC,UAAU;IAAEC;EAAS,CAAC,GAC5Dd,eAAe,CAACO,UAAU,CAAC;EAC7B,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGf,KAAK,CAACgB,QAAQ,CAAgB,IAAI,CAAC;EAC7D,MAAMC,SAAS,GAAGnB,iBAAiB,CAAC;IAAEM;EAAO,CAAC,CAAC;EAC/C,MAAMc,WAAW,GAAGrB,cAAc,CAAC;IAAEoB,SAAS;IAAEb;EAAO,CAAC,CAAC;EACzD,MAAMe,cAAc,GAAGd,KAAK,GAAGY,SAAS,CAACG,MAAM,CAACf,KAAK,CAAC,GAAG,EAAE;EAC3D,MAAMgB,YAAY,GAAIC,IAAY,IAAK;IACrC,MAAMC,QAAQ,GAAGL,WAAW,CAACM,OAAO,CAAC,IAAI,CAAC;IAC1C,MAAMC,UAAU,GAAGP,WAAW,CAACM,OAAO,CAAC,IAAI,CAAC;IAC5C,MAAME,SAAS,GACbtB,MAAM,KAAK,IAAI,GACXc,WAAW,CAACM,OAAO,CAAC,MAAM,CAAC,GAC3BN,WAAW,CAACM,OAAO,CAAC,MAAM,CAAC;IAEjC,MAAMG,GAAG,GAAGC,MAAM,CAACN,IAAI,CAACO,KAAK,CAACN,QAAQ,EAAEA,QAAQ,GAAG,CAAC,CAAC,CAAC;IACtD,MAAMO,IAAI,GAAGF,MAAM,CAACN,IAAI,CAACO,KAAK,CAACH,SAAS,EAAEA,SAAS,GAAG,CAAC,CAAC,CAAC;IACzD,MAAMK,KAAK,GAAGH,MAAM,CAACN,IAAI,CAACO,KAAK,CAACJ,UAAU,EAAEA,UAAU,GAAG,CAAC,CAAC,CAAC;IAE5D,IAAIG,MAAM,CAACI,KAAK,CAACL,GAAG,CAAC,IAAIC,MAAM,CAACI,KAAK,CAACF,IAAI,CAAC,IAAIF,MAAM,CAACI,KAAK,CAACD,KAAK,CAAC,EAAE;MAClE,MAAME,UAAU,GAAGhC,cAAc,CAC/BG,MAAM,EACN,0BAA0B,EAC1B,MAAM,0BACR,CAAC,CAACc,WAAW,CAAC;MACdH,QAAQ,CAACkB,UAAU,CAAC;MACpBxB,iBAAiB,IAAIA,iBAAiB,CAACwB,UAAU,CAAC;MAClD;IACF;IAEA,MAAMC,SAAS,GACb3B,SAAS,KAAK,KAAK,GACf,IAAI4B,IAAI,CAACL,IAAI,EAAEC,KAAK,GAAG,CAAC,EAAEJ,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAC1C,IAAIQ,IAAI,CAACL,IAAI,EAAEC,KAAK,GAAG,CAAC,EAAEJ,GAAG,CAAC;IAEpC,IAAIjB,UAAU,CAACwB,SAAS,CAAC,EAAE;MACzB,MAAMD,UAAU,GAAGhC,cAAc,CAACG,MAAM,EAAE,gBAAgB,CAAC;MAC3DW,QAAQ,CAACkB,UAAU,CAAC;MACpBxB,iBAAiB,IAAIA,iBAAiB,CAACwB,UAAU,CAAC;MAClD;IACF;IACA,IAAI,CAACtB,kBAAkB,CAACuB,SAAS,CAAC,EAAE;MAClC,IAAIE,MAAM,GACRxB,UAAU,IAAIC,QAAQ,GAClB,CACG,GAAEZ,cAAc,CACfG,MAAM,EACN,eAAe,EACf,MAAM,eACR,CAAC,CAACa,SAAS,CAACG,MAAM,CAACR,UAAU,CAAC,EAAEK,SAAS,CAACG,MAAM,CAACP,QAAQ,CAAC,CAAE,EAAC,CAC9D,GACD,CACED,UAAU,GACNX,cAAc,CACZG,MAAM,EACN,kBAAkB,EAClB,MAAM,kBACR,CAAC,CAACa,SAAS,CAACG,MAAM,CAACR,UAAU,CAAC,CAAC,GAC/B,EAAE,EACNC,QAAQ,GACJZ,cAAc,CACZG,MAAM,EACN,iBAAiB,EACjB,MAAM,iBACR,CAAC,CAACa,SAAS,CAACG,MAAM,CAACP,QAAQ,CAAC,CAAC,GAC7B,EAAE,CACP;MACP,MAAMoB,UAAU,GAAGG,MAAM,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;MACpDxB,QAAQ,CAACqB,MAAM,CAACC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC;MAC3C9B,iBAAiB,IAAIA,iBAAiB,CAACwB,UAAU,CAAC;MAClD;IACF;IAEAlB,QAAQ,CAAC,IAAI,CAAC;IACdN,iBAAiB,IAAIA,iBAAiB,CAAC,IAAI,CAAC;IAC5C,IAAIF,SAAS,KAAK,KAAK,EAAE;MACvBC,QAAQ,CAAC0B,SAAS,CAAC;IACrB,CAAC,MAAM;MACL1B,QAAQ,CAAC0B,SAAS,CAAC;IACrB;EACF,CAAC;EACD,OAAO;IACL1B,QAAQ;IACRM,KAAK;IACLK,cAAc;IACdE,YAAY;IACZH;EACF,CAAC;AACH","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}